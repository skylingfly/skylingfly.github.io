(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{326:function(e,s,a){"use strict";a.r(s);var t=a(33),r=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h3",{attrs:{id:"git-合并"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-合并"}},[e._v("#")]),e._v(" git 合并")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.zhihu.com/question/61283395",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git commits历史是如何做到如此清爽的？"),a("OutboundLink")],1)]),e._v(" "),a("h4",{attrs:{id:"rebase场景一：如何合并多次提交记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rebase场景一：如何合并多次提交记录"}},[e._v("#")]),e._v(" Rebase场景一：如何合并多次提交记录")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("合并最近的n次提交记录")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" rebase -i HEAD~n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])])]),e._v(" "),a("li",[a("p",[e._v("进入vi编辑模式")]),e._v(" "),a("p",[e._v("pick：保留该commit（缩写:p）")]),e._v(" "),a("p",[e._v("reword：保留该commit，但我需要修改该commit的注释（缩写:r）")]),e._v(" "),a("p",[e._v("edit：保留该commit, 但我要停下来修改该提交(不仅仅修改注释)（缩写:e）")]),e._v(" "),a("p",[e._v("squash：将该commit和前一个commit合并（缩写:s）")]),e._v(" "),a("p",[e._v("fixup：将该commit和前一个commit合并，但我不要保留该提交的注释信息（缩写:f）")]),e._v(" "),a("p",[e._v("exec：执行shell命令（缩写:x）")]),e._v(" "),a("p",[e._v("drop：我要丢弃该commit（缩写:d）")])]),e._v(" "),a("li",[a("p",[e._v("如果保存的时候，出错")]),e._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("error"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" cannot "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'squash'")]),e._v(" without a previous commit\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[a("strong",[e._v("注意不要合并先前提交的东西，也就是已经提交远程分支的纪录。")])])]),e._v(" "),a("li",[a("p",[e._v("如果你异常退出了 "),a("code",[e._v("vi")]),e._v(" 窗口")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" rebase --edit-todo\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("这时候会一直处在这个编辑的模式里，我们可以回去继续编辑，修改完保存一下")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" rebase --continue\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])])]),e._v(" "),a("li",[a("p",[e._v("查看结果")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" log\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])])])]),e._v(" "),a("h4",{attrs:{id:"rebase场景二：分支合并"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rebase场景二：分支合并"}},[e._v("#")]),e._v(" Rebase场景二：分支合并")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("我们先从 "),a("code",[e._v("master")]),e._v(" 分支切出一个 "),a("code",[e._v("dev")]),e._v(" 分支，进行开发：")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" checkout -b feature\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])])]),e._v(" "),a("li",[a("p",[e._v("这时候，你的同事完成了一次 "),a("code",[e._v("hotfix")]),e._v("，并合并入了 "),a("code",[e._v("master")]),e._v(" 分支，此时 "),a("code",[e._v("master")]),e._v(" 已经领先于你的 "),a("code",[e._v("feature")]),e._v(" 分支了")])]),e._v(" "),a("li",[a("p",[e._v("恰巧，我们想要同步 "),a("code",[e._v("master")]),e._v(" 分支的改动，首先想到了 "),a("code",[e._v("merge")])])]),e._v(" "),a("li",[a("p",[e._v("让我们来试试 "),a("code",[e._v("git rebase")]),e._v("而不是使用merge")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" rebase master\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("首先，"),a("code",[e._v("git")]),e._v(" 会把 "),a("code",[e._v("feature")]),e._v(" 分支里面的每个 "),a("code",[e._v("commit")]),e._v(" 取消掉；\n其次，把上面的操作临时保存成 "),a("code",[e._v("patch")]),e._v(" 文件，存在 "),a("code",[e._v(".git/rebase")]),e._v(" 目录下；\n然后，把 "),a("code",[e._v("feature")]),e._v(" 分支更新到最新的 "),a("code",[e._v("master")]),e._v(" 分支；\n最后，把上面保存的 "),a("code",[e._v("patch")]),e._v(" 文件应用到 "),a("code",[e._v("feature")]),e._v(" 分支上；")]),e._v(" "),a("p",[e._v("从 "),a("code",[e._v("commit")]),e._v(" 记录我们可以看出来，"),a("code",[e._v("feature")]),e._v(" 分支是基于 "),a("code",[e._v("hotfix")]),e._v(" 合并后的 "),a("code",[e._v("master")]),e._v(" ，自然而然的成为了最领先的分支，而且没有 "),a("code",[e._v("merge")]),e._v(" 的 "),a("code",[e._v("commit")]),e._v(" 记录，是不是感觉很舒服了。")])]),e._v(" "),a("li",[a("p",[e._v("在 "),a("code",[e._v("rebase")]),e._v(" 的过程中，也许会出现冲突 "),a("code",[e._v("conflict")]),e._v("。在这种情况，"),a("code",[e._v("git")]),e._v(" 会停止 "),a("code",[e._v("rebase")]),e._v(" 并会让你去解决冲突。在解决完冲突后，用 "),a("code",[e._v("git add")]),e._v(" 命令去更新这些内容")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" rebase --continue\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("这样 "),a("code",[e._v("git")]),e._v(" 会继续应用余下的 "),a("code",[e._v("patch")]),e._v(" 补丁文件。")])]),e._v(" "),a("li",[a("p",[e._v("在任何时候，我们都可以用 "),a("code",[e._v("--abort")]),e._v(" 参数来终止 "),a("code",[e._v("rebase")]),e._v(" 的行动，并且分支会回到 "),a("code",[e._v("rebase")]),e._v(" 开始前的状态。")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" rebase —abort\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])])])]),e._v(" "),a("h3",{attrs:{id:"注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[e._v("#")]),e._v(" 注意事项")]),e._v(" "),a("ol",[a("li",[e._v("如果你想要一个干净的、线性的提交历史，没有不必要的合并提交，你应该使用 git rebase 而不是 git merge 来并入其他分支上的更改。")])]),e._v(" "),a("p",[e._v("另一方面，如果你想要保存项目完整的历史，并且避免重写公共分支上的 commit， 你可以使用 git merge。两种选项都很好用，但至少你现在多了 git rebase 这个选择。")]),e._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[e._v("可以使用"),a("code",[e._v("git commit --amend")])])]),e._v(" "),a("h3",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/6869519303864123399",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://juejin.im/post/6869519303864123399"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://jartto.wang/2018/12/11/git-rebase/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://jartto.wang/2018/12/11/git-rebase/"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://git-scm.com/book/zh/v2/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://git-scm.com/book/zh/v2/"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);